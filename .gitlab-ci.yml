stages:
  - backend_build
  - backend_tests
  - frontend_build
  - frontend_tests

variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"

before_script:
  - yum update -y -q -e 0
  - yum -y install lib32stdc++6 lib32z1
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

backend_build:
  stage: backend_build
  script:
    - cd Backend/
    - gradle assemble
    - ls -la build/
    - ls -la build/libs
  tags:
    - BACKEND
  artifacts:
    paths:
      - libs/*.jar

backend_tests:
  stage: backend_tests
  tags:
    - BACKEND
  script:
    - cd Backend
    - gradle check

frontend_build:
    stage: frontend_build
    tags:
      - FRONTEND
    script:
      - cd Frontend
      - gradle assemble
    artifacts:
      paths:
        - app/build/outputs/

frontend_tests:
    stage: frontend_tests
    tags:
      - FRONTEND
    script:
      - cd Frontend
      - gradle -Pci --console=plain :app:testDebug
